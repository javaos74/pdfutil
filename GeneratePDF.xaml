<Activity mc:Ignorable="sap sap2010" x:Class="GeneratePDF" this:GeneratePDF.FontSize="10" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:bd="clr-namespace:BitMiracle.Docotic;assembly=BitMiracle.Docotic.Pdf" xmlns:bdp="clr-namespace:BitMiracle.Docotic.Pdf;assembly=BitMiracle.Docotic.Pdf" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:st="clr-namespace:System.Text;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="InputPDFFilePath" Type="InArgument(x:String)" />
    <x:Property Name="OutputPDFFilePath" Type="InArgument(x:String)" />
    <x:Property Name="FontSize" Type="InArgument(x:Int32)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1772.8,1840</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>GeneratePDF_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="29">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>BitMiracle.Docotic.Pdf</x:String>
      <x:String>BitMiracle.Docotic</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Runtime.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="24">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>BitMiracle.Docotic.Pdf</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="GeneratePDF" sap:VirtualizedContainerService.HintSize="381.6,1675.2" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="bdp:PdfDocument" Name="output_pdf" />
      <Variable x:TypeArguments="bdp:PdfCanvas" Name="canvas" />
      <Variable x:TypeArguments="bdp:PdfPage" Name="page" />
      <Variable x:TypeArguments="x:Int32" Name="line_idx" />
      <Variable x:TypeArguments="bdp:PdfTextBox" Name="textblock" />
      <Variable x:TypeArguments="bdp:PdfDocument" Name="input_pdf" />
      <Variable x:TypeArguments="bdp:PdfCanvas" Name="input_canvas" />
      <Variable x:TypeArguments="st:StringBuilder" Default="[new StringBuilder]" Name="builder" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="340,133.6" sap2010:WorkflowViewState.IdRef="InvokeMethod_5" MethodName="AddLicenseData" TargetType="bd:LicenseManager">
      <InArgument x:TypeArguments="x:String">70DBT-16PFD-4OPRM-TWNDA-CIB8C</InArgument>
    </InvokeMethod>
    <ui:Delete ContinueOnError="True" sap:VirtualizedContainerService.HintSize="340,22.4" sap2010:WorkflowViewState.IdRef="Delete_1" Path="[OutputPDFFilePath]" />
    <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_5">
      <Assign.To>
        <OutArgument x:TypeArguments="bdp:PdfDocument">[input_pdf]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="bdp:PdfDocument">[new PdfDocument( InputPDFFilePath)]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="bdp:PdfDocument">[output_pdf]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="bdp:PdfDocument">[new PdfDocument]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="340,255.2" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="bdp:PdfPage">[page]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="bdp:PdfPage">[output_pdf.Pages(0)]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="bdp:PdfCanvas">[canvas]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="bdp:PdfCanvas">[page.Canvas]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="bdp:PdfPaperOrientation">[page.Orientation]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="bdp:PdfPaperOrientation">[PdfPaperOrientation.Portrait]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="bdp:PdfCanvas">[input_canvas]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="bdp:PdfCanvas">[input_pdf.Pages(0).Canvas]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="bdp:PdfFont">[canvas.Font]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="bdp:PdfFont">[output_pdf.AddFontFromFile("C:\Windows\Fonts\GULIM.TTC")]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:Double">[canvas.FontSize]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:Double">[FontSize]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
    </ui:MultipleAssign>
    <ui:ForEach x:TypeArguments="bdp:PdfTextData" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="340,677.6" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[input_pdf.Pages(0).GetWords]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="bdp:PdfTextData">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="bdp:PdfTextData" Name="text" />
          </ActivityAction.Argument>
          <Sequence DisplayName="본문" sap:VirtualizedContainerService.HintSize="304.8,543.2" sap2010:WorkflowViewState.IdRef="Sequence_5">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="tempText" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="263.2,52.8" sap2010:WorkflowViewState.IdRef="CommentOut_3">
              <ui:CommentOut.Body>
                <Sequence DisplayName="무시된 액티비티" sap:VirtualizedContainerService.HintSize="375.2,185.6" sap2010:WorkflowViewState.IdRef="Sequence_6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[text.Text + &quot; / &quot; + text.WordSpacing.ToString]" />
                </Sequence>
              </ui:CommentOut.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:CommentOut>
            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="263.2,52.8" sap2010:WorkflowViewState.IdRef="CommentOut_4">
              <ui:CommentOut.Body>
                <Sequence DisplayName="무시된 액티비티" sap:VirtualizedContainerService.HintSize="304.8,252" sap2010:WorkflowViewState.IdRef="Sequence_7">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="262.5,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Double">[canvas.FontSize]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Double">[text.FontSize]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="262.5,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                    <Assign.To>
                      <OutArgument x:TypeArguments="bdp:PdfFont">[canvas.Font]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="bdp:PdfFont">[text.Font]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </ui:CommentOut.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:CommentOut>
            <Assign sap2010:Annotation.AnnotationText="한글과 영문자 숫자만 기록 " sap:VirtualizedContainerService.HintSize="263.2,91.2" sap2010:WorkflowViewState.IdRef="Assign_9">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[tempText]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String" xml:space="preserve">[text.Text.ToCharArray.Where(  Function(p) 	(Char.IsLetterOrDigit(p) Or  ( p &gt;= ChrW(&amp;hAC00) AndAlso p = ChrW(&amp;hD7A3)) ) ).ToString]</InArgument>
              </Assign.Value>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Assign>
            <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="263.2,133.6" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="DrawString">
              <InvokeMethod.TargetObject>
                <InArgument x:TypeArguments="bdp:PdfCanvas">[canvas]</InArgument>
              </InvokeMethod.TargetObject>
              <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32 (text.Bounds.Left)]</InArgument>
              <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32( text.Bounds.Bottom)]</InArgument>
              <InArgument x:TypeArguments="x:String">[tempText]</InArgument>
            </InvokeMethod>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="340,133.6" sap2010:WorkflowViewState.IdRef="InvokeMethod_2" MethodName="Save">
      <InvokeMethod.TargetObject>
        <InArgument x:TypeArguments="bdp:PdfDocument">[output_pdf]</InArgument>
      </InvokeMethod.TargetObject>
      <InArgument x:TypeArguments="x:String">[OutputPDFFilePath]</InArgument>
    </InvokeMethod>
  </Sequence>
</Activity>